
#pragma once 

#include <stdbool.h>

#include <cglm/struct.h>

typedef struct color
{
    uint8_t r, g, b, a;
} color;

vec4s color_to_vec4(color in);
color vec4_to_color(vec4s in);
color vec3_to_color(vec3s in);

typedef enum sw_status 
{
    sw_ok,
    sw_fail,
    sw_already_initialized
} sw_status;

sw_status sw_initialize(uint16_t w, uint16_t h, double render_scaling);
ivec2s sw_render_size();
void sw_tick();
//void sw_render(color *fb);
color *sw_begin_render();
void sw_end_render();
void sw_skip_render();
void sw_shutdown();
bool sw_wants_quit();

void sw_present();

void sw_render_line(vec2s a, vec2s b, color col);
void sw_render_quad(vec2s o, vec2s s, color col);

double sw_delta_time();

double sw_seconds();

typedef enum key
{
    key_unknown = 0,
    key_a = 4,
    key_b = 5,
    key_c = 6,
    key_d = 7,
    key_e = 8,
    key_f = 9,
    key_g = 10,
    key_h = 11,
    key_i = 12,
    key_j = 13,
    key_k = 14,
    key_l = 15,
    key_m = 16,
    key_n = 17,
    key_o = 18,
    key_p = 19,
    key_q = 20,
    key_r = 21,
    key_s = 22,
    key_t = 23,
    key_u = 24,
    key_v = 25,
    key_w = 26,
    key_x = 27,
    key_y = 28,
    key_z = 29,
    key_1 = 30,
    key_2 = 31,
    key_3 = 32,
    key_4 = 33,
    key_5 = 34,
    key_6 = 35,
    key_7 = 36,
    key_8 = 37,
    key_9 = 38,
    key_0 = 39,
    key_return = 40,
    key_escape = 41,
    key_backspace = 42,
    key_tab = 43,
    key_space = 44,
    key_minus = 45,
    key_equals = 46,
    key_leftbracket = 47,
    key_rightbracket = 48,
    key_backslash = 49,
    key_nonushash = 50,
    key_semicolon = 51,
    key_apostrophe = 52,
    key_grave = 53,
    key_comma = 54,
    key_period = 55,
    key_slash = 56,
    key_capslock = 57,
    key_f1 = 58,
    key_f2 = 59,
    key_f3 = 60,
    key_f4 = 61,
    key_f5 = 62,
    key_f6 = 63,
    key_f7 = 64,
    key_f8 = 65,
    key_f9 = 66,
    key_f10 = 67,
    key_f11 = 68,
    key_f12 = 69,
    key_printscreen = 70,
    key_scrolllock = 71,
    key_pause = 72,
    key_insert = 73,
    key_home = 74,
    key_pageup = 75,
    key_delete = 76,
    key_end = 77,
    key_pagedown = 78,
    key_right = 79,
    key_left = 80,
    key_down = 81,
    key_up = 82,
    key_numlockclear = 83,
    key_kp_divide = 84,
    key_kp_multiply = 85,
    key_kp_minus = 86,
    key_kp_plus = 87,
    key_kp_enter = 88,
    key_kp_1 = 89,
    key_kp_2 = 90,
    key_kp_3 = 91,
    key_kp_4 = 92,
    key_kp_5 = 93,
    key_kp_6 = 94,
    key_kp_7 = 95,
    key_kp_8 = 96,
    key_kp_9 = 97,
    key_kp_0 = 98,
    key_kp_period = 99,
    key_nonusbackslash = 100,
    key_application = 101,
    key_power = 102,
    key_kp_equals = 103,
    key_f13 = 104,
    key_f14 = 105,
    key_f15 = 106,
    key_f16 = 107,
    key_f17 = 108,
    key_f18 = 109,
    key_f19 = 110,
    key_f20 = 111,
    key_f21 = 112,
    key_f22 = 113,
    key_f23 = 114,
    key_f24 = 115,
    key_execute = 116,
    key_help = 117,    
    key_menu = 118,    
    key_select = 119,
    key_stop = 120,    
    key_again = 121,   
    key_undo = 122,    
    key_cut = 123,     
    key_copy = 124,    
    key_paste = 125,   
    key_find = 126,    
    key_mute = 127,
    key_volumeup = 128,
    key_volumedown = 129,
    key_kp_comma = 133,
    key_kp_equalsas400 = 134,
    key_international1 = 135,
    key_international2 = 136,
    key_international3 = 137,
    key_international4 = 138,
    key_international5 = 139,
    key_international6 = 140,
    key_international7 = 141,
    key_international8 = 142,
    key_international9 = 143,
    key_lang1 = 144,
    key_lang2 = 145,
    key_lang3 = 146,
    key_lang4 = 147,
    key_lang5 = 148,
    key_lang6 = 149,
    key_lang7 = 150,
    key_lang8 = 151,
    key_lang9 = 152,
    key_alterase = 153,
    key_sysreq = 154,
    key_cancel = 155,
    key_clear = 156,
    key_prior = 157,
    key_return2 = 158,
    key_separator = 159,
    key_out = 160,
    key_oper = 161,
    key_clearagain = 162,
    key_crsel = 163,
    key_exsel = 164,
    key_kp_00 = 176,
    key_kp_000 = 177,
    key_thousandsseparator = 178,
    key_decimalseparator = 179,
    key_currencyunit = 180,
    key_currencysubunit = 181,
    key_kp_leftparen = 182,
    key_kp_rightparen = 183,
    key_kp_leftbrace = 184,
    key_kp_rightbrace = 185,
    key_kp_tab = 186,
    key_kp_backspace = 187,
    key_kp_a = 188,
    key_kp_b = 189,
    key_kp_c = 190,
    key_kp_d = 191,
    key_kp_e = 192,
    key_kp_f = 193,
    key_kp_xor = 194,
    key_kp_power = 195,
    key_kp_percent = 196,
    key_kp_less = 197,
    key_kp_greater = 198,
    key_kp_ampersand = 199,
    key_kp_dblampersand = 200,
    key_kp_verticalbar = 201,
    key_kp_dblverticalbar = 202,
    key_kp_colon = 203,
    key_kp_hash = 204,
    key_kp_space = 205,
    key_kp_at = 206,
    key_kp_exclam = 207,
    key_kp_memstore = 208,
    key_kp_memrecall = 209,
    key_kp_memclear = 210,
    key_kp_memadd = 211,
    key_kp_memsubtract = 212,
    key_kp_memmultiply = 213,
    key_kp_memdivide = 214,
    key_kp_plusminus = 215,
    key_kp_clear = 216,
    key_kp_clearentry = 217,
    key_kp_binary = 218,
    key_kp_octal = 219,
    key_kp_decimal = 220,
    key_kp_hexadecimal = 221,
    key_lctrl = 224,
    key_lshift = 225,
    key_lalt = 226,
    key_lgui = 227,
    key_rctrl = 228,
    key_rshift = 229,
    key_ralt = 230,
    key_rgui = 231,
    key_count = 232
} key;

bool sw_key_down(key k);
bool sw_key_pressed(key k);
bool sw_key_released(key k);


uint64_t sw_frame_index();